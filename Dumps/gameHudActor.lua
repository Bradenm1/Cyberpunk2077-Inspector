{
	name: gameHudActor,
	functions: {
		UpdateActorData(updateData: handle:HUDActorUpdateData),
		AddModule(module: handle:HUDModule),
		RemoveModule(module: handle:HUDModule),
		SetStatus(newStatus: HUDActorStatus),
		SetRemotelyAccessed(value: Bool),
		SetRevealed(value: Bool),
		SetTagged(value: Bool),
		SetClue(value: Bool),
		SetClueGroup(value: CName),
		SetCanOpenScannerInfo(value: Bool),
		SetIsInIconForcedVisibilityRange(value: Bool),
		SetIsIconForcedVisibileThroughWalls(value: Bool),
		SetShouldRefreshQHack(value: Bool),
		GetEntityID() => (entEntityID),
		GetType() => (HUDActorType),
		GetStatus() => (HUDActorStatus),
		GetVisibility() => (ActorVisibilityStatus),
		IsRevealed() => (Bool),
		IsTagged() => (Bool),
		IsClue() => (Bool),
		IsGrouppedClue() => (Bool),
		IsRemotelyAccessed() => (Bool),
		CanOpenScannerInfo() => (Bool),
		IsInIconForcedVisibilityRange() => (Bool),
		IsIconForcedVisibileThroughWalls() => (Bool),
		GetShouldRefreshQHack() => (Bool),
		GetActiveModules() => (array:whandle:HUDModule),
		ToString() => (String),
		GetClassName() => (CName),
		IsA(className: CName) => (Bool),
		IsExactlyA(className: CName) => (Bool),
	},
	staticFunctions: {
		DetectScriptableCycles(),
	},
	properties: {
		entityID: entEntityID,
		type: HUDActorType,
		status: HUDActorStatus,
		visibility: ActorVisibilityStatus,
		activeModules: array:whandle:HUDModule,
		isRevealed: Bool,
		isTagged: Bool,
		clueData: HUDClueData,
		isRemotelyAccessed: Bool,
		canOpenScannerInfo: Bool,
		isInIconForcedVisibilityRange: Bool,
		isIconForcedVisibleThroughWalls: Bool,
		shouldRefreshQHack: Bool,
	}
}