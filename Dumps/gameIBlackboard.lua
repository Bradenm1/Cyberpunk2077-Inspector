{
	name: gameIBlackboard,
	functions: {
		GetBool(id: gamebbScriptID_Bool) => (Bool),
		SetBool(id: gamebbScriptID_Bool, value: Bool, forceFire: Bool),
		SignalBool(id: gamebbScriptID_Bool),
		RegisterListenerBool(id: gamebbScriptID_Bool, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		UnregisterListenerBool(id: gamebbScriptID_Bool, callbackId: Uint32),
		RegisterDelayedListenerBool(id: gamebbScriptID_Bool, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		GetInt(id: gamebbScriptID_Int32) => (Int32),
		SetInt(id: gamebbScriptID_Int32, value: Int32, forceFire: Bool),
		SignalInt(id: gamebbScriptID_Int32),
		RegisterListenerInt(id: gamebbScriptID_Int32, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		UnregisterListenerInt(id: gamebbScriptID_Int32, callbackId: Uint32),
		RegisterDelayedListenerInt(id: gamebbScriptID_Int32, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		GetUint(id: gamebbScriptID_Uint32) => (Uint32),
		SetUint(id: gamebbScriptID_Uint32, value: Uint32, forceFire: Bool),
		SignalUint(id: gamebbScriptID_Uint32),
		RegisterListenerUint(id: gamebbScriptID_Uint32, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		UnregisterListenerUint(id: gamebbScriptID_Uint32, callbackId: Uint32),
		RegisterDelayedListenerUint(id: gamebbScriptID_Uint32, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		GetFloat(id: gamebbScriptID_Float) => (Float),
		SetFloat(id: gamebbScriptID_Float, value: Float, forceFire: Bool),
		SignalFloat(id: gamebbScriptID_Float),
		RegisterListenerFloat(id: gamebbScriptID_Float, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		UnregisterListenerFloat(id: gamebbScriptID_Float, callbackId: Uint32),
		RegisterDelayedListenerFloat(id: gamebbScriptID_Float, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		GetString(id: gamebbScriptID_String) => (String),
		SetString(id: gamebbScriptID_String, value: String, forceFire: Bool),
		SignalString(id: gamebbScriptID_String),
		RegisterListenerString(id: gamebbScriptID_String, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		UnregisterListenerString(id: gamebbScriptID_String, callbackId: Uint32),
		RegisterDelayedListenerString(id: gamebbScriptID_String, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		GetName(id: gamebbScriptID_CName) => (CName),
		SetName(id: gamebbScriptID_CName, value: CName, forceFire: Bool),
		SignalName(id: gamebbScriptID_CName),
		RegisterListenerName(id: gamebbScriptID_CName, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		UnregisterListenerName(id: gamebbScriptID_CName, callbackId: Uint32),
		RegisterDelayedListenerName(id: gamebbScriptID_CName, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		GetVector2(id: gamebbScriptID_Vector2) => (Vector2),
		SetVector2(id: gamebbScriptID_Vector2, value: Vector2, forceFire: Bool),
		SignalVector2(id: gamebbScriptID_Vector2),
		RegisterListenerVector2(id: gamebbScriptID_Vector2, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		UnregisterListenerVector2(id: gamebbScriptID_Vector2, callbackId: Uint32),
		RegisterDelayedListenerVector2(id: gamebbScriptID_Vector2, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		GetVector4(id: gamebbScriptID_Vector4) => (Vector4),
		SetVector4(id: gamebbScriptID_Vector4, value: Vector4, forceFire: Bool),
		SignalVector4(id: gamebbScriptID_Vector4),
		RegisterListenerVector4(id: gamebbScriptID_Vector4, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		UnregisterListenerVector4(id: gamebbScriptID_Vector4, callbackId: Uint32),
		RegisterDelayedListenerVector4(id: gamebbScriptID_Vector4, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		GetQuat(id: gamebbScriptID_Quaternion) => (Quaternion),
		SetQuat(id: gamebbScriptID_Quaternion, value: Quaternion, forceFire: Bool),
		SignalQuat(id: gamebbScriptID_Quaternion),
		RegisterListenerQuat(id: gamebbScriptID_Quaternion, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		UnregisterListenerQuat(id: gamebbScriptID_Quaternion, callbackId: Uint32),
		RegisterDelayedListenerQuat(id: gamebbScriptID_Quaternion, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		GetEntityID(id: gamebbScriptID_EntityID) => (entEntityID),
		SetEntityID(id: gamebbScriptID_EntityID, value: entEntityID, forceFire: Bool),
		SignalEntityID(id: gamebbScriptID_EntityID),
		RegisterListenerEntityID(id: gamebbScriptID_EntityID, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		UnregisterListenerEntityID(id: gamebbScriptID_EntityID, callbackId: Uint32),
		RegisterDelayedListenerEntityID(id: gamebbScriptID_EntityID, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		GetVariant(tag: gamebbScriptID_Variant) => (Variant),
		SetVariant(tag: gamebbScriptID_Variant, value: Variant, forceFire: Bool),
		SignalVariant(id: gamebbScriptID_Variant),
		RegisterListenerVariant(tag: gamebbScriptID_Variant, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		UnregisterListenerVariant(id: gamebbScriptID_Variant, callbackId: Uint32),
		RegisterDelayedListenerVariant(id: gamebbScriptID_Variant, object: handle:IScriptable, func: CName, fireIfValueExist: Bool) => (Uint32),
		Signal(id: gamebbScriptID),
		FireCallbacks(),
		RegisterEntity(id: gamebbScriptID, gameInstance: ScriptGameInstance, entityID: entEntityID) => (Uint32),
		UnregisterEntity(id: gamebbScriptID, callbackId: Uint32),
		UnregisterDelayedListener(id: gamebbScriptID, callbackId: Uint32),
		ClearAllFields(signal: Bool),
		ToString() => (String),
		GetClassName() => (CName),
		IsA(className: CName) => (Bool),
		IsExactlyA(className: CName) => (Bool),
	},
	staticFunctions: {
		Create(definition: handle:gamebbScriptDefinition) => (handle:gameIBlackboard),
		DetectScriptableCycles(),
	},
	properties: {
	}
}