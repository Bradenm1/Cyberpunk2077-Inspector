{
	name: FastTravelSystem,
	functions: {
		OnAttach(),
		OnDetach(),
		OnRestored(saveVersion: Int32, gameVersion: Int32),
		RegisterLoadingScreenCallback(),
		UnregisterLoadingCallback(),
		AddFastTravelPoint(nodeData: handle:gameFastTravelPointData),
		OnLoadingScreenFinished(value: Bool) => (Bool),
		CheckForScottieAchievement(),
		RemoveFastTravelPoint(nodeData: handle:gameFastTravelPointData),
		HasFastTravelPoint(nodeData: handle:gameFastTravelPointData) => (Bool),
		GetFastTravelPoint(nodeData: handle:gameFastTravelPointData) => (handle:gameFastTravelPointData),
		IsFastTravelEnabledOnMap() => (Bool),
		GetFastTravelPoints() => (array:handle:gameFastTravelPointData),
		PerformFastTravel(player: handle:gameObject, nodeData: handle:gameFastTravelPointData),
		AddFastTravelLock(reason: CName, statusEffectID: TweakDBID),
		RemoveFastTravelLock(reason: CName),
		EvaluateFastTravelLocksOnRestore(),
		IsFastTravelEnabled() => (Bool),
		RegisterFastTravelPoint(pointData: handle:gameFastTravelPointData, requesterID: entEntityID),
		UnregisterFastTravelPoint(pointData: handle:gameFastTravelPointData, requesterID: entEntityID),
		RefreshFastTravelNodes(),
		RegisterMappin(nodeData: handle:gameFastTravelPointData),
		UnregisterMappin(nodeData: handle:gameFastTravelPointData),
		OnRegisterFastTravelPointsRequest(request: handle:RegisterFastTravelPointsRequest),
		OnEnableFastTravelRequest(request: handle:EnableFastTravelRequest),
		OnRegisterFastTravelPointRequest(request: handle:RegisterFastTravelPointRequest),
		OnUnregisterFastTravelPointRequest(request: handle:UnregisterFastTravelPointRequest),
		OnPerformFastTravelRequest(request: handle:PerformFastTravelRequest),
		OnToggleFastTravelAvailabilityOnMapRequest(evt: handle:ToggleFastTravelAvailabilityOnMapRequest),
		OnRequestAutoSave(request: handle:AutoSaveRequest),
		RequestAutoSaveWithDelay(),
		RequestAutoSave(),
		RestoreFastTravelMappins(),
		TutorialAddFastTravelFact(),
		OnFastTravelConsoleInstructionRequest(request: handle:FastTravelConsoleInstructionRequest),
		execInstructionForward(magicFloat: Float),
		execInstructionPrevious(),
		QueueRequest(request: handle:gameScriptableSystemRequest),
		GetGameInstance() => (ScriptGameInstance),
		WasRestored() => (Bool),
		OnAttach(),
		OnDetach(),
		OnRestored(saveVersion: Int32, gameVersion: Int32),
		IsSavingLocked() => (Bool),
		ToString() => (String),
		GetClassName() => (CName),
		IsA(className: CName) => (Bool),
		IsExactlyA(className: CName) => (Bool),
	},
	staticFunctions: {
		DetectScriptableCycles(),
	},
	properties: {
		fastTravelNodes: array:handle:gameFastTravelPointData,
		isFastTravelEnabledOnMap: Bool,
		fastTravelPointsTotal: Int32,
		fastTravelLocks: array:FastTravelSystemLock,
		loadingScreenCallbackID: Uint32,
		requestAutoSafeAfterLoadingScreen: Bool,
	}
}