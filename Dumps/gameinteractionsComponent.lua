{
	name: gameinteractionsComponent,
	functions: {
		SetSingleChoice(choice: gameinteractionsChoice, layer: CName),
		SetChoices(choices: array:gameinteractionsChoice, layer: CName),
		ResetChoices(layer: CName, deactivate: Bool),
		GetActiveInputLayers() => (Bool, activeInputLayers: array:gameinteractionsActiveLayerData),
		GetActivatorsForLayer(layerName: CName) => (Bool, activeInputLayers: array:gameinteractionsActiveLayerData),
		GetLocalToWorld() => (Matrix),
		GetInitialPosition() => (Vector4),
		GetInitialOrientation() => (Quaternion),
		GetInitialTransform() => (Matrix),
		GetLocalPosition() => (Vector4),
		GetLocalOrientation() => (Quaternion),
		GetLocalTransform() => (Matrix),
		SetLocalPosition(pos: Vector4),
		SetLocalOrientation(rot: Quaternion),
		SetLocalTransform(pos: Vector4, rot: Quaternion),
		GetTransformParent(),
		GetEntity() => (whandle:entEntity),
		FindComponentByName(componentName: CName) => (whandle:entIComponent),
		GetName() => (CName),
		IsEnabled() => (Bool),
		Toggle(on: Bool),
		QueueEntityEvent(ev: handle:redEvent),
		RegisterRenderDebug(filterName: String, functionName: CName),
		ToString() => (String),
		GetClassName() => (CName),
		IsA(className: CName) => (Bool),
		IsExactlyA(className: CName) => (Bool),
	},
	staticFunctions: {
		DetectScriptableCycles(),
	},
	properties: {
		definitionResource: rRef:gameinteractionsInteractionDescriptorResource,
		interactionRootOffset: Vector3,
		layerOverrides: array:gameinteractionsInteractionDefinitionOverrider,
		layerOverridesTemp: array:gameinteractionsInteractionDefinitionOverrider,
		isEnabled: Bool,
		localTransform: WorldTransform,
		parentTransform: handle:entITransformBinding,
		name: CName,
		isReplicable: Bool,
		id: CRUID,
	}
}